P217 L.append(X)与L+[x]的结果类似，不同的是，前者会原地修改L，而后者会生成新的列表，所以前者执行速度快。

P217 在Python2.6和更早的版本中，不同类型的对象也是可比较的（例如，字符串和列表）。在Python3.0中，不同类型的比较会引发一个异常。

P218 内置函数sorted，可以排序任何序列（不只是列表）并且针对结果返回一个新的序列（而不是原处修改）。

P230 创建字典的方法：
     {'name':'dott11','age':26}
     D={}
     D['name']='dott11'
     D['age']=26
     dict(name='dott11',age=26)
     dict([('name','dott11'),('age',26)])
     如果所有键的值都相同，可以用这个特殊形式对字典进行初始化：dict.fromkyes(['a','b'],0)

P230 字典解析：
     D=dict(zip(['a','b','c'],[1,2,3]))
     D={k:v for (k,v) in zip(['a','b','c'],[1,2,3]))}
     
P231 在Python3.0中，字典的keys，values和items都返回视图对象，而在Python2.6中，它们返回实际的结果列表。视图对象是可迭代的，这就意味着对象每次产生一个结果项，而不是在内存中立即产生结果列表。除了是可迭代的，字典视图还保持了字典成分的最初的顺序，反应字典未来的修改，并且能够支持集合操作。另一方面，它们不是列表，并且不支持像索引和列表sort方法这样的操作，打印的时候它们也不显示自己的项。

P237 在原处修改列表对象的运算：append和extend方法可在原处增长列表，sort和reverse方法可以对列表进行排序或者翻转，insert方法可以在一个偏移值处插入一个元素，remove和pop方法会按照值和位置从列表中删除元素，del语句会删除一个元素或分片，而索引以及分片赋值语句会取代一个元素或者整个片段。
